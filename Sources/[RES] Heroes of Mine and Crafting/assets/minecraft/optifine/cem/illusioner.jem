{
	"credit": "Made with Blockbench",
	"textureSize": [128, 128],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"var.testing": "0",
					"var.count_aggro": "clamp(if(is_aggressive                         , min(40, var.count_aggro +0.1 *frame_time*40), max(0, var.count_aggro -0.1 *frame_time*40)), 0, 1)",
					"var.count_swim": " clamp(if(!is_riding&&!is_on_ground&&is_in_water, min(40, var.count_swim  +0.1 *frame_time*40), max(0, var.count_swim  -0.1 *frame_time*40)), 0, 1)",
					"var.r": "(pi*random(id)*2) + (limb_swing/20)*0",
					"var.b": "age /(11 -random(id)*2)",
					"var.ls": "limb_swing/if( limb_speed>0.5, 1.6, 1.1 )",
					"var.swim": "limb_swing/2 +age/4",
					"var.ws": "clamp(limb_speed*6, 0, 1)*clamp(2-limb_speed*3, 0, 1)",
					"var.run": "clamp(if(limb_speed>0.5, min(20, var.run +0.1 *frame_time*20), max(0, var.run -0.1 *frame_time*20)), 0, 1)",
					"var.walk": "clamp(1-var.run, 0, 1)",
					"var.ylook": "(0.5-0.5*cos( clamp(sin(var.r+age/60)*6, 0, 1)*pi ))*1.2",
					"var.melee": "if(is_aggressive&&!is_in_water, if(left_arm.rx>torad(-60)&&right_arm.rx-sin(swing_progress*pi)*2<torad(-90), -1, left_arm.rx-sin(swing_progress*pi)*2<torad(-90), 1, -1), 0)",
					"var.fold": "if(is_riding||is_in_water&&!is_on_ground||limb_speed>1, 0, clamp(20 +sin(var.r +age/200)*30, 0, 1-var.count_aggro) )",
					"var.pose": "if(is_riding||is_in_water&&!is_on_ground, 0, (0.5-0.5*cos( clamp(1-var.fold-limb_speed*4, 0, 1)*pi )) )*clamp(random(id)+0.3, 0.3, 1)",
					"var.nov1": "if(is_aggressive, 0, (0.5-0.5*cos( clamp(-5.6 +cos(-pi/6 +var.r +age/80)*6, 0, 1)*pi )) )*clamp(2-limb_speed*4, 0, 1)",
					"var.nov2": "(0.5-0.5*cos( clamp(-39 +cos(-pi/4 +var.r +var.b/20)*40, 0, 1)*pi ))*clamp(1-limb_speed*2, 0, 1)"
				},
				{
					"head.rx": "-sin(pi*2*swing_progress)/5 +torad(head_pitch)/1.5 +sin(var.ls*2)/20*limb_speed +if(is_aggressive, torad(-5)*random(id), 0) +if(!is_riding&&!is_on_ground&&is_in_water, cos(var.swim*2)/30 +torad(-10) +torad(10*clamp(limb_speed*8, 0, 1)), 0) +(-torad(15 +7*random(id))*clamp(sin(limb_speed*3), 0, 1) )*var.fold +( cos(-pi/3 +var.r+var.b +sin(var.r+var.b))/4 -torad(10) )*var.nov2 +(sin(limb_swing/2)/4 +torad(20))*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"head.ry": "-sin(pi*swing_progress)/6*var.melee +torad(head_yaw)/if(is_aggressive, 1.2, 1.8 -0.5*var.ylook) +sin(var.r+age/10 +sin(var.r*2+age/5)/2)/6 *var.nov1",
					"head.rz": "-sin(pi*swing_progress)/6*var.melee                                                             +sin(var.r+age/10 +sin(var.r*2+age/5)/2)/20*var.nov1 +cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"head.tx": "-sin(pi*swing_progress)  *var.melee +sin(torad(45)+var.ls)/3*limb_speed",
					"head.ty": " sin(pi*swing_progress)*2 +if(!is_riding&&!is_on_ground&&is_in_water, -sin(var.swim*2)/2          , 0.3) +14*var.count_swim +limb_speed*var.ws -sin(torad(if(limb_speed>0.5, -45, 45))+var.ls*2)*limb_speed +sin(var.r +var.b)/6 +( cos(var.r+var.b +sin(var.r+var.b)*1.5)/2 +0.5 )*var.nov2",
					"head.tz": "                           if(!is_riding&&!is_on_ground&&is_in_water, -1*clamp(limb_speed*8, 0, 1), (-2.5*limb_speed) -sin(var.r +var.b)/6 -cos(var.ls*2)/2*clamp(limb_speed*3, 0, 1) +if(is_aggressive, 1.5*random(id), 0) -sin(pi*swing_progress)*if(var.melee!=0, 4, 2) -sin(pi*swing_progress) +(0.5 +clamp(-1+limb_speed*2, 0, 1))*var.fold ) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"nose.ty": "head.ty*var.testing",
					"body.rx": "         if(!is_riding&&!is_on_ground&&is_in_water, torad(20          *clamp(limb_speed*8, 0, 1)), sin(var.r +var.b)/60 +cos(var.ls*2)/18*limb_speed +torad(15)*limb_speed*(1-var.fold) +torad(-2.5 -2.5*var.fold)*clamp(1-limb_speed*2, 0, 1)) +if(is_aggressive, torad(-10)*random(id), 0) +sin(pi*swing_progress)/2 +( cos(var.r+var.b +sin(var.r+var.b))/12 )*var.nov2 -(sin(limb_swing/2)/2 +torad(20))/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"body.ry": "         if(!is_riding&&!is_on_ground&&is_in_water, sin(var.swim  )/8                            , torad(-7.5)*var.pose -sin(var.ls)/4*limb_speed*clamp(1-var.fold-1+limb_speed*2, 0, 1) +torad(head_yaw)/6*clamp(1-limb_speed*2, 0, 1) +(torad(-20) +sin(pi*swing_progress) )*var.melee)",
					"body.rz": "head.rz +if(!is_riding&&!is_on_ground&&is_in_water, sin(var.swim  )/30*clamp(limb_speed*8, 0, 1) , 0) +((-sin(var.ls)/60 -torad(2))*limb_speed +sin(pi*swing_progress)/9)*var.melee -sin(var.r+age/10 +sin(var.r*2+age/5)/2)/20*var.nov1 -cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"body.tx": "head.tx",
					"body.ty": "head.ty +(0.15*limb_speed) -cos(torad(if(limb_speed>0.5, -45, 45))+var.ls*2 +cos(var.ls*2)/2)/1.5*limb_speed",
					"body.tz": "head.tz +(1*limb_speed)",
					"nose.rx": "head.rx*var.testing",
					"nose.ry": "head.ry*var.testing",
					"nose.rz": "head.rz*var.testing",
					"nose.tx": "head.tx*var.testing",
					"nose.tz": "head.tz*var.testing"
				},
				{
					"right_arm.tx": "-5 +body.tx -(head_yaw/57.5)/2",
					"left_arm.tx": "  5 +body.tx +(head_yaw/57.5)/2",
					"right_arm.ty": "2 +body.ty +sin((limb_swing/2+age)/80*pi*2-torad(60))/5",
					"left_arm.ty": " 2 +body.ty +sin((limb_swing/2+age)/80*pi*2-torad(60))/5",
					"right_arm.tz": "(-2*limb_speed) +sin((limb_swing/2+age)/80*-pi*2)/4 +(head_yaw/57.5) +sin((limb_swing/2+age)/15*pi*2-torad(45))*1",
					"left_arm.tz": " (-2*limb_speed) +sin((limb_swing/2+age)/80*-pi*2)/4 -(head_yaw/57.5) -sin((limb_swing/2+age)/15*pi*2+torad(45))*1"
				},
				{
					"left_arm3.visible": "arms.visible",
					"right_arm3.visible": "arms.visible",
					"right_arm3.rx": "if(!is_riding&&!is_on_ground&&is_in_water,torad(-50) -cos(var.swim)/4*clamp(1-limb_speed*8, 0, 1) +(cos(var.swim +sin(var.swim)) +torad(30))*clamp(limb_speed*8, 0, 1), if(is_riding, torad(-45), -sin(var.ls)*limb_speed ) +torad(head_yaw)/8 )   +torad(5)*var.pose +( -sin(-pi/3 +var.r+var.b +sin(var.r+var.b) )/6 )*var.nov2   +(sin(limb_swing/2) -pi/4)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_arm3.rx": "if(!is_riding&&!is_on_ground&&is_in_water,torad(-50) -cos(var.swim)/4*clamp(1-limb_speed*8, 0, 1) +(cos(var.swim +sin(var.swim)) +torad(30))*clamp(limb_speed*8, 0, 1), if(is_riding, torad(-45),  sin(var.ls)*limb_speed ) -torad(head_yaw)/8 )   +torad( 5 )*var.pose +( -sin(-pi/3 +var.r+var.b +sin(var.r+var.b) )/6 )*var.nov2   +(sin(limb_swing/2) -pi/4)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"right_arm3.ry": "if(!is_riding&&!is_on_ground&&is_in_water,torad( 30) -sin(var.swim +cos(var.swim)/4)  *clamp(1-limb_speed*8, 0, 1) +(torad( 5) +cos(pi/8 +var.swim +sin(var.swim)/2 )/2 +clamp(-sin(var.swim),-pi/2, 0) )*clamp(limb_speed*8, 0, 1), if(is_riding, -torad(20), 0) -torad(15)*clamp(limb_speed*4, 0, 1) +cos(var.r +var.b)/30 ) -torad(5)*var.pose",
					"left_arm3.ry": "if(!is_riding&&!is_on_ground&&is_in_water,torad(-30) +sin(var.swim +cos(var.swim)/4)  *clamp(1-limb_speed*8, 0, 1) +(torad(-5) -cos(pi/8 +var.swim +sin(var.swim)/2 )/2 +clamp( sin(var.swim), 0, pi/2) )*clamp(limb_speed*8, 0, 1), if(is_riding,  torad(20), 0) +torad(15)*clamp(limb_speed*4, 0, 1) -cos(var.r +var.b)/30 ) +torad( 5)*var.pose",
					"right_arm3.rz": "if(!is_riding&&!is_on_ground&&is_in_water, -cos(var.swim)/2 +(torad( 20) +cos(var.swim)/2)  *clamp(  limb_speed*8, 0, 1), 0 ) -torad(head_pitch)/14 +torad( 8 +0.5 *var.pose)",
					"left_arm3.rz": "if(!is_riding&&!is_on_ground&&is_in_water, cos(var.swim)/2 +(torad(-20) -cos(var.swim)/2)  *clamp(  limb_speed*8, 0, 1), 0 ) +torad(head_pitch)/14 +torad(-8 +0.5*var.pose)",
					"right_arm3.tx": "if(!is_riding&&!is_on_ground&&is_in_water,-4.25,-6.5)",
					"left_arm3.tx": "if(!is_riding&&!is_on_ground&&is_in_water,4.25,6.5)",
					"right_arm3.tz": "if(!is_riding&&!is_on_ground&&is_in_water,2,-0.25)",
					"left_arm3.tz": "if(!is_riding&&!is_on_ground&&is_in_water,2,-0.25)"
				},
				{
					"right_leg.rx": "if(is_riding, 0, !is_riding&&!is_on_ground&&is_in_water, 0, (torad(1)+sin(var.r +var.b)/60) +asin( sin(var.ls))/3*var.ws +sin(var.ls)/1.3*clamp(-1+limb_speed*3, 0, 1) +clamp(-cos(var.ls)/1.8*clamp(limb_speed*1.5, 0, 1), 0, torad(45)) +torad(15)*clamp(-0.5+limb_speed*2, 0, 1) -torad(head_yaw)/30*clamp(1-limb_speed*2, 0, 1) ) +torad( 4)*var.melee +torad(2)*var.fold +torad(-5  )*var.pose +( -cos(var.r+var.b +sin(var.r+var.b))/18 )*var.nov2",
					"left_leg.rx": " if(is_riding, 0, !is_riding&&!is_on_ground&&is_in_water, 0, (torad(1)+sin(var.r +var.b)/60) +asin(-sin(var.ls))/3*var.ws -sin(var.ls)/1.3*clamp(-1+limb_speed*3, 0, 1) +clamp( cos(var.ls)/1.8*clamp(limb_speed*1.5, 0, 1), 0, torad(45)) +torad(15)*clamp(-0.5+limb_speed*2, 0, 1) +torad(head_yaw)/30*clamp(1-limb_speed*2, 0, 1) ) +torad(-4)*var.melee +torad(2)*var.fold +torad(12.5)*var.pose +( -cos(var.r+var.b +sin(var.r+var.b))/18 )*var.nov2",
					"right_leg.ry": "if(is_riding, 0, !is_riding&&!is_on_ground&&is_in_water, 0, if(var.melee==-1, torad( 15)                                    , torad( 5+12*random(id)*var.fold)*clamp(1-limb_speed*4, 0, 1)    )                                                                                                                                     )                                         +torad( 0  )*var.pose",
					"left_leg.ry": " if(is_riding, 0, !is_riding&&!is_on_ground&&is_in_water, 0, if(var.melee== 1, torad(-15)                                    , torad(-5-12*random(id)*var.fold)*clamp(1-limb_speed*4, 0, 1)    )                                                                                                                                     )                                         +torad(-40 )*var.pose",
					"right_leg.rz": "if(is_riding, 0, !is_riding&&!is_on_ground&&is_in_water, 0, if(var.melee==-1, torad( 5 ) +sin(torad(-10)+var.ls)/3*limb_speed, var.melee== 1, torad( 5)*clamp(1-limb_speed*2, 0, 1), 0) -torad(head_yaw)/45*clamp(1-limb_speed*2, 0, 1)                                                                                             )                                         +torad(2.5 )*var.pose",
					"left_leg.rz": " if(is_riding, 0, !is_riding&&!is_on_ground&&is_in_water, 0, if(var.melee== 1, torad(-5 ) +sin(torad(-10)+var.ls)/3*limb_speed, var.melee==-1, torad(-5)*clamp(1-limb_speed*2, 0, 1), 0) -torad(head_yaw)/45*clamp(1-limb_speed*2, 0, 1)                                                                                             )                                         +torad(-12 )*var.pose",
					"right_leg.tx": "  -2 +if(!is_riding&&!is_on_ground&&is_in_water,         0, if(var.melee==-1, -2*clamp(1-limb_speed, 0, 1), 0)                                                                                        ) +(-0.75)*var.pose",
					"left_leg.tx": "    2 +if(!is_riding&&!is_on_ground&&is_in_water,         0, if(var.melee== 1,  2*clamp(1-limb_speed, 0, 1), 0)                                                                                        ) +( 1   )*var.pose",
					"right_leg.ty": "  24 +if(!is_riding&&!is_on_ground&&is_in_water, body.ty -14 -0.8*clamp(limb_speed*8, 0, 1) -sin(pi*swing_progress)*4, clamp( cos(var.ls)*2*var.ws +clamp(2-limb_speed*6, -3, 0) +(-sin(torad(-30)+var.ls)*3 +head.ty)*clamp(-1+limb_speed*3, 0, 1), -8, 0.2)    ) +14*var.count_swim -sin(hurt_time*pi/10)*2",
					"left_leg.ty": "   24 +if(!is_riding&&!is_on_ground&&is_in_water, body.ty -14 -0.8*clamp(limb_speed*8, 0, 1) -sin(pi*swing_progress)*4, clamp(-cos(var.ls)*2*var.ws +clamp(2-limb_speed*6, -3, 0) +( sin(torad(-30)+var.ls)*3 +head.ty)*clamp(-1+limb_speed*3, 0, 1), -8, 0.2)    ) +14*var.count_swim -sin(hurt_time*pi/10)*2",
					"right_leg.tz": "-0.2 +if(!is_riding&&!is_on_ground&&is_in_water, todeg(body.rx)/6 -sin(pi/4+var.swim)/1.5 -cos(pi/4+var.swim)/2*0 -sin(pi*swing_progress)*4, asin( sin(var.ls))*4*var.ws                                                     +sin(var.ls)*9 *clamp(-1+limb_speed*3, 0, 1) +limb_speed*4) +(-3.25 )*var.pose",
					"left_leg.tz": " -0.2 +if(!is_riding&&!is_on_ground&&is_in_water, todeg(body.rx)/6 +sin(pi/4+var.swim)/1.5 +cos(pi/4+var.swim)/2*0 -sin(pi*swing_progress)*4, asin(-sin(var.ls))*4*var.ws                                                     -sin(var.ls)*9 *clamp(-1+limb_speed*3, 0, 1) +limb_speed*4) +( 2.25 )*var.pose",
					"right_leg2.rx": "if(is_riding, -torad(80), !is_riding&&!is_on_ground&&is_in_water,  cos(pi/4+var.swim-sin(var.swim)/2*clamp(limb_speed*8, 0, 1))/3 +torad(20*clamp(limb_speed*8, 0, 1)), 0) +(-sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_leg2.rx": " if(is_riding, -torad(80), !is_riding&&!is_on_ground&&is_in_water, -cos(pi/4+var.swim+sin(var.swim)/2*clamp(limb_speed*8, 0, 1))/3 +torad(20*clamp(limb_speed*8, 0, 1)), 0) +( sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"right_leg2.ry": "if(is_riding,  torad(20), !is_riding&&!is_on_ground&&is_in_water, body.ry, 0)",
					"left_leg2.ry": " if(is_riding, -torad(20), !is_riding&&!is_on_ground&&is_in_water, body.ry, 0)",
					"right_leg2.rz": "if(is_riding,  0        , !is_riding&&!is_on_ground&&is_in_water, torad( 3), 0) -(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_leg2.rz": " if(is_riding,  0        , !is_riding&&!is_on_ground&&is_in_water, torad(-3), 0) +(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)"
				},
				{
					"var.y": "var.y2",
					"var.y2": "var.y3",
					"var.y3": "head.ry",
					"var.z": "var.z2",
					"var.z2": "var.z3",
					"var.z3": "rot_y"
				}
			]
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 24, -4, 8, 8, 8], "textureOffset": [32, 0], "sizeAdd": 0.5},
				{"coordinates": [-4, 24, -4, 8, 8, 8], "textureOffset": [0, 0]}
			],
			"submodels": [
				{
					"id": "right_eye",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [2, 28, -4],
					"submodels": [
						{
							"id": "r_eye_top",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0.025]
						},
						{
							"id": "r_eye_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-0.5, -0.5, 0],
							"submodels": [
								{
									"id": "r_eye_pupil_in",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, 0, 0],
									"submodels": [
										{
											"id": "r_eye_pupil_ou",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [1, 0, 0],
											"submodels": [
												{
													"id": "r_eye_pupil_do",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [-0.5, -0.5, 0],
													"submodels": [
														{
															"id": "r_eye_pupil_up",
															"invertAxis": "xy",
															"mirrorTexture": "u",
															"translate": [0, 1, 0]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "right_eye_white",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [1, -1, 0]
						},
						{
							"id": "right_eyelid",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -1, 1],
							"submodels": [
								{
									"id": "right_blink",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, 1, 0]
								}
							]
						},
						{
							"id": "ctrl_r_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "left_eye",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [-2, 28, -4],
					"submodels": [
						{
							"id": "l_eye_top",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0.025]
						},
						{
							"id": "l_eye_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0.5, -0.5, 0],
							"submodels": [
								{
									"id": "l_eye_pupil_in",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, 0, 0],
									"submodels": [
										{
											"id": "l_eye_pupil_ou",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [1, 0, 0],
											"submodels": [
												{
													"id": "l_eye_pupil_do",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [-0.5, -0.5, 0],
													"submodels": [
														{
															"id": "l_eye_pupil_up",
															"invertAxis": "xy",
															"mirrorTexture": "u",
															"translate": [0, 1, 0]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "left_eye_white",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-1, -1, 0]
						},
						{
							"id": "left_eyelid",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -1, 1],
							"submodels": [
								{
									"id": "left_blink",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, 1, 0]
								}
							]
						},
						{
							"id": "ctrl_l_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "left_brow",
					"invertAxis": "xy",
					"translate": [-2, 28.5, -4]
				},
				{
					"id": "right_brow",
					"invertAxis": "xy",
					"translate": [2, 28.5, -4]
				},
				{
					"id": "nose2",
					"invertAxis": "xy",
					"translate": [0, 26.5, -4]
				},
				{
					"id": "hat2",
					"invertAxis": "xy",
					"translate": [0, 19, 0],
					"submodels": [
						{
							"id": "shat2",
							"invertAxis": "xy",
							"translate": [0, 16, 0],
							"rotate": [0, -90, 0],
							"submodels": [
								{
									"id": "lid3",
									"invertAxis": "xy",
									"translate": [11.25, -7, 1],
									"rotate": [0, 0, 60],
									"boxes": [
										{"coordinates": [-1, 0, -13, 1, 13, 24], "textureOffset": [78, 1]}
									]
								},
								{
									"id": "lid4",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-11.25, -7, 1],
									"rotate": [0, 0, -60],
									"boxes": [
										{"coordinates": [0, 0, -13, 1, 13, 24], "textureOffset": [78, 1]}
									]
								}
							]
						},
						{
							"id": "shat",
							"invertAxis": "xy",
							"translate": [0, 16, 0],
							"submodels": [
								{
									"id": "lid1",
									"invertAxis": "xy",
									"translate": [11.25, -7, 1],
									"rotate": [0, 0, 60],
									"boxes": [
										{"coordinates": [-1, 0, -13, 1, 13, 24], "textureOffset": [78, 1]}
									]
								},
								{
									"id": "lid2",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-11.25, -7, 1],
									"rotate": [0, 0, -60],
									"boxes": [
										{"coordinates": [0, 0, -13, 1, 13, 24], "textureOffset": [78, 1]}
									]
								}
							]
						},
						{
							"id": "bone15",
							"invertAxis": "xy",
							"translate": [-5, 12, -5],
							"boxes": [
								{"coordinates": [0, -0.9, 0, 10, 2, 10], "textureOffset": [0, 116]},
								{"coordinates": [-3, -0.9, -3, 16, 1, 16], "textureOffset": [48, 111]}
							],
							"submodels": [
								{
									"id": "bone16",
									"invertAxis": "xy",
									"translate": [8.5, 0.1, 1.5],
									"rotate": [3, 0, 2],
									"boxes": [
										{"coordinates": [-6.9651, 0.99802, -0.05231, 7, 4, 7], "textureOffset": [31, 114]}
									],
									"submodels": [
										{
											"id": "bone17",
											"invertAxis": "xy",
											"translate": [-1.5, 4, 1.5],
											"rotate": [7, 0, 4],
											"boxes": [
												{"coordinates": [-3.89556, 0.97938, -0.17295, 4, 4, 4], "textureOffset": [48, 105]}
											],
											"submodels": [
												{
													"id": "bone18",
													"invertAxis": "xy",
													"translate": [-1.5, 4, 1.5],
													"rotate": [15, 0, 6],
													"boxes": [
														{"coordinates": [-0.79376, 0.88552, -0.41632, 1, 2, 1], "textureOffset": [56, 116]}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 12, -2, 8, 12, 4], "textureOffset": [16, 32], "sizeAdd": 0.28},
				{"coordinates": [-4, 12, -2, 8, 12, 4], "textureOffset": [16, 16]},
				{"coordinates": [-4, 5, -2, 8, 19, 4], "textureOffset": [104, 0], "sizeAdd": 0.32}
			],
			"submodels": [
				{
					"id": "coat",
					"invertAxis": "xy",
					"translate": [0, 22, 0]
				},
				{
					"id": "arms_rotation",
					"invertAxis": "xy",
					"translate": [0, 22.5, 0.35],
					"rotate": [43, 0, 0],
					"submodels": [
						{
							"id": "arms_flipped",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -24, 0]
						}
					]
				},
				{
					"id": "right_arm3",
					"invertAxis": "xy",
					"translate": [7, 23, 0],
					"boxes": [
						{"coordinates": [-3, -11, -2, 4, 12, 4], "textureOffset": [40, 16]},
						{"coordinates": [-3, -11, -2, 4, 12, 4], "textureOffset": [40, 32], "sizeAdd": 0.25}
					],
					"submodels": [
						{
							"id": "right_arm4",
							"invertAxis": "xy",
							"translate": [-12, -1, 0],
							"boxes": [
								{"coordinates": [9, -10, -2, 3, 12, 4], "textureOffset": [24, 64]},
								{"coordinates": [9, -10, -2, 3, 12, 4], "textureOffset": [24, 80], "sizeAdd": 0.25}
							]
						}
					]
				},
				{
					"id": "left_arm3",
					"invertAxis": "xy",
					"translate": [-7, 23, 0],
					"boxes": [
						{"coordinates": [-1, -11, -2, 4, 12, 4], "textureOffset": [48, 48], "sizeAdd": 0.25},
						{"coordinates": [-1, -11, -2, 4, 12, 4], "textureOffset": [32, 48]}
					],
					"submodels": [
						{
							"id": "left_arm4",
							"invertAxis": "xy",
							"translate": [12, -1, 0],
							"boxes": [
								{"coordinates": [-12, -10, -2, 3, 12, 4], "textureOffset": [38, 80], "sizeAdd": 0.25},
								{"coordinates": [-12, -10, -2, 3, 12, 4], "textureOffset": [38, 64]}
							]
						}
					]
				}
			]
		},
		{
			"part": "arms",
			"id": "arms",
			"invertAxis": "xy",
			"translate": [0, -21, 1],
			"submodels": [
				{
					"id": "right",
					"invertAxis": "xy",
					"translate": [5, 22, 0]
				},
				{
					"id": "left",
					"invertAxis": "xy",
					"translate": [-5, 22, 0]
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"submodels": [
				{
					"id": "right_arm2",
					"invertAxis": "xy",
					"translate": [7, 23, 0],
					"boxes": [
						{"coordinates": [-3, -11, -2, 4, 12, 4], "textureOffset": [40, 16]},
						{"coordinates": [-3, -11, -2, 4, 12, 4], "textureOffset": [40, 32], "sizeAdd": 0.25}
					],
					"submodels": [
						{
							"id": "right_arm5",
							"invertAxis": "xy",
							"translate": [-12, -1, 0],
							"boxes": [
								{"coordinates": [9, -10, -2, 3, 12, 4], "textureOffset": [24, 64]},
								{"coordinates": [9, -10, -2, 3, 12, 4], "textureOffset": [24, 80], "sizeAdd": 0.25}
							]
						}
					]
				}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [5, -22, 0],
			"submodels": [
				{
					"id": "left_arm2",
					"invertAxis": "xy",
					"translate": [-7, 23, 0],
					"boxes": [
						{"coordinates": [-1, -11, -2, 4, 12, 4], "textureOffset": [48, 48], "sizeAdd": 0.25},
						{"coordinates": [-1, -11, -2, 4, 12, 4], "textureOffset": [32, 48]}
					],
					"submodels": [
						{
							"id": "left_arm5",
							"invertAxis": "xy",
							"translate": [12, -1, 0],
							"boxes": [
								{"coordinates": [-12, -10, -2, 3, 12, 4], "textureOffset": [38, 80], "sizeAdd": 0.25},
								{"coordinates": [-12, -10, -2, 3, 12, 4], "textureOffset": [38, 64]}
							]
						}
					]
				}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, 0, 0],
			"submodels": [
				{
					"id": "right_leg2",
					"invertAxis": "xy",
					"translate": [2, 12, 0],
					"boxes": [
						{"coordinates": [-2, -12, -2, 4, 12, 4], "textureOffset": [0, 32], "sizeAdd": 0.25},
						{"coordinates": [-2, -12, -2, 4, 12, 4], "textureOffset": [0, 16]}
					]
				}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [2, 0, 0],
			"submodels": [
				{
					"id": "left_leg2",
					"invertAxis": "xy",
					"translate": [-2, 12, 0],
					"submodels": [
						{
							"id": "left_leg_sub_1",
							"invertAxis": "xy",
							"translate": [0, 0, 0],
							"boxes": [
								{"coordinates": [-2, -12, -2, 4, 12, 4], "textureOffset": [0, 48], "sizeAdd": 0.25},
								{"coordinates": [-2, -12, -2, 4, 12, 4], "textureOffset": [16, 48]}
							]
						}
					]
				}
			]
		},
		{
			"part": "hat",
			"id": "hat",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "arms",
			"id": "arms",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "arms",
			"id": "arms",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		}
	]
}